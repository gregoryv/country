// Code generated by "stringer -linecomment -type Code"; DO NOT EDIT.

package country

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AF-0]
	_ = x[AL-1]
	_ = x[DZ-2]
	_ = x[AS-3]
	_ = x[AD-4]
	_ = x[AO-5]
	_ = x[AI-6]
	_ = x[AQ-7]
	_ = x[AG-8]
	_ = x[AR-9]
	_ = x[AM-10]
	_ = x[AW-11]
	_ = x[AU-12]
	_ = x[AT-13]
	_ = x[AZ-14]
	_ = x[BS-15]
	_ = x[BH-16]
	_ = x[BD-17]
	_ = x[BB-18]
	_ = x[BY-19]
	_ = x[BE-20]
	_ = x[BZ-21]
	_ = x[BJ-22]
	_ = x[BM-23]
	_ = x[BT-24]
	_ = x[BO-25]
	_ = x[BQ-26]
	_ = x[BA-27]
	_ = x[BW-28]
	_ = x[BV-29]
	_ = x[BR-30]
	_ = x[IO-31]
	_ = x[BN-32]
	_ = x[BG-33]
	_ = x[BF-34]
	_ = x[BI-35]
	_ = x[CV-36]
	_ = x[KH-37]
	_ = x[CM-38]
	_ = x[CA-39]
	_ = x[KY-40]
	_ = x[CF-41]
	_ = x[TD-42]
	_ = x[CL-43]
	_ = x[CN-44]
	_ = x[CX-45]
	_ = x[CC-46]
	_ = x[CO-47]
	_ = x[KM-48]
	_ = x[CD-49]
	_ = x[CG-50]
	_ = x[CK-51]
	_ = x[CR-52]
	_ = x[HR-53]
	_ = x[CU-54]
	_ = x[CW-55]
	_ = x[CY-56]
	_ = x[CZ-57]
	_ = x[CI-58]
	_ = x[DK-59]
	_ = x[DJ-60]
	_ = x[DM-61]
	_ = x[DO-62]
	_ = x[EC-63]
	_ = x[EG-64]
	_ = x[SV-65]
	_ = x[GQ-66]
	_ = x[ER-67]
	_ = x[EE-68]
	_ = x[SZ-69]
	_ = x[ET-70]
	_ = x[FK-71]
	_ = x[FO-72]
	_ = x[FJ-73]
	_ = x[FI-74]
	_ = x[FR-75]
	_ = x[GF-76]
	_ = x[PF-77]
	_ = x[TF-78]
	_ = x[GA-79]
	_ = x[GM-80]
	_ = x[GE-81]
	_ = x[DE-82]
	_ = x[GH-83]
	_ = x[GI-84]
	_ = x[GR-85]
	_ = x[GL-86]
	_ = x[GD-87]
	_ = x[GP-88]
	_ = x[GU-89]
	_ = x[GT-90]
	_ = x[GG-91]
	_ = x[GN-92]
	_ = x[GW-93]
	_ = x[GY-94]
	_ = x[HT-95]
	_ = x[HM-96]
	_ = x[VA-97]
	_ = x[HN-98]
	_ = x[HK-99]
	_ = x[HU-100]
	_ = x[IS-101]
	_ = x[IN-102]
	_ = x[ID-103]
	_ = x[IR-104]
	_ = x[IQ-105]
	_ = x[IE-106]
	_ = x[IM-107]
	_ = x[IL-108]
	_ = x[IT-109]
	_ = x[JM-110]
	_ = x[JP-111]
	_ = x[JE-112]
	_ = x[JO-113]
	_ = x[KZ-114]
	_ = x[KE-115]
	_ = x[KI-116]
	_ = x[KP-117]
	_ = x[KR-118]
	_ = x[KW-119]
	_ = x[KG-120]
	_ = x[LA-121]
	_ = x[LV-122]
	_ = x[LB-123]
	_ = x[LS-124]
	_ = x[LR-125]
	_ = x[LY-126]
	_ = x[LI-127]
	_ = x[LT-128]
	_ = x[LU-129]
	_ = x[MO-130]
	_ = x[MG-131]
	_ = x[MW-132]
	_ = x[MY-133]
	_ = x[MV-134]
	_ = x[ML-135]
	_ = x[MT-136]
	_ = x[MH-137]
	_ = x[MQ-138]
	_ = x[MR-139]
	_ = x[MU-140]
	_ = x[YT-141]
	_ = x[MX-142]
	_ = x[FM-143]
	_ = x[MD-144]
	_ = x[MC-145]
	_ = x[MN-146]
	_ = x[ME-147]
	_ = x[MS-148]
	_ = x[MA-149]
	_ = x[MZ-150]
	_ = x[MM-151]
	_ = x[NA-152]
	_ = x[NR-153]
	_ = x[NP-154]
	_ = x[NL-155]
	_ = x[NC-156]
	_ = x[NZ-157]
	_ = x[NI-158]
	_ = x[NE-159]
	_ = x[NG-160]
	_ = x[NU-161]
	_ = x[NF-162]
	_ = x[MP-163]
	_ = x[NO-164]
	_ = x[OM-165]
	_ = x[PK-166]
	_ = x[PW-167]
	_ = x[PS-168]
	_ = x[PA-169]
	_ = x[PG-170]
	_ = x[PY-171]
	_ = x[PE-172]
	_ = x[PH-173]
	_ = x[PN-174]
	_ = x[PL-175]
	_ = x[PT-176]
	_ = x[PR-177]
	_ = x[QA-178]
	_ = x[MK-179]
	_ = x[RO-180]
	_ = x[RU-181]
	_ = x[RW-182]
	_ = x[RE-183]
	_ = x[BL-184]
	_ = x[SH-185]
	_ = x[KN-186]
	_ = x[LC-187]
	_ = x[MF-188]
	_ = x[PM-189]
	_ = x[VC-190]
	_ = x[WS-191]
	_ = x[SM-192]
	_ = x[ST-193]
	_ = x[SA-194]
	_ = x[SN-195]
	_ = x[RS-196]
	_ = x[SC-197]
	_ = x[SL-198]
	_ = x[SG-199]
	_ = x[SX-200]
	_ = x[SK-201]
	_ = x[SI-202]
	_ = x[SB-203]
	_ = x[SO-204]
	_ = x[ZA-205]
	_ = x[GS-206]
	_ = x[SS-207]
	_ = x[ES-208]
	_ = x[LK-209]
	_ = x[SD-210]
	_ = x[SR-211]
	_ = x[SJ-212]
	_ = x[SE-213]
	_ = x[CH-214]
	_ = x[SY-215]
	_ = x[TW-216]
	_ = x[TJ-217]
	_ = x[TZ-218]
	_ = x[TH-219]
	_ = x[TL-220]
	_ = x[TG-221]
	_ = x[TK-222]
	_ = x[TO-223]
	_ = x[TT-224]
	_ = x[TN-225]
	_ = x[TR-226]
	_ = x[TM-227]
	_ = x[TC-228]
	_ = x[TV-229]
	_ = x[UG-230]
	_ = x[UA-231]
	_ = x[AE-232]
	_ = x[GB-233]
	_ = x[UM-234]
	_ = x[US-235]
	_ = x[UY-236]
	_ = x[UZ-237]
	_ = x[VU-238]
	_ = x[VE-239]
	_ = x[VN-240]
	_ = x[VG-241]
	_ = x[VI-242]
	_ = x[WF-243]
	_ = x[EH-244]
	_ = x[YE-245]
	_ = x[ZM-246]
	_ = x[ZW-247]
	_ = x[AX-248]
}

const _Code_name = "AFG 004 AfghanistanALB 008 AlbaniaDZA 012 AlgeriaASM 016 American SamoaAND 020 AndorraAGO 024 AngolaAIA 660 AnguillaATA 010 AntarcticaATG 028 Antigua and BarbudaARG 032 ArgentinaARM 051 ArmeniaABW 533 ArubaAUS 036 AustraliaAUT 040 AustriaAZE 031 AzerbaijanBHS 044 Bahamas (the)BHR 048 BahrainBGD 050 BangladeshBRB 052 BarbadosBLR 112 BelarusBEL 056 BelgiumBLZ 084 BelizeBEN 204 BeninBMU 060 BermudaBTN 064 BhutanBOL 068 Bolivia (Plurinational State of)BES 535 Bonaire, Sint Eustatius and SabaBIH 070 Bosnia and HerzegovinaBWA 072 BotswanaBVT 074 Bouvet IslandBRA 076 BrazilIOT 086 British Indian Ocean Territory (the)BRN 096 Brunei DarussalamBGR 100 BulgariaBFA 854 Burkina FasoBDI 108 BurundiCPV 132 Cabo VerdeKHM 116 CambodiaCMR 120 CameroonCAN 124 CanadaCYM 136 Cayman Islands (the)CAF 140 Central African Republic (the)TCD 148 ChadCHL 152 ChileCHN 156 ChinaCXR 162 Christmas IslandCCK 166 Cocos (Keeling) Islands (the)COL 170 ColombiaCOM 174 Comoros (the)COD 180 Congo (the Democratic Republic of the)COG 178 Congo (the)COK 184 Cook Islands (the)CRI 188 Costa RicaHRV 191 CroatiaCUB 192 CubaCUW 531 CuraçaoCYP 196 CyprusCZE 203 CzechiaCIV 384 Côte d'IvoireDNK 208 DenmarkDJI 262 DjiboutiDMA 212 DominicaDOM 214 Dominican Republic (the)ECU 218 EcuadorEGY 818 EgyptSLV 222 El SalvadorGNQ 226 Equatorial GuineaERI 232 EritreaEST 233 EstoniaSWZ 748 EswatiniETH 231 EthiopiaFLK 238 Falkland Islands (the) [Malvinas]FRO 234 Faroe Islands (the)FJI 242 FijiFIN 246 FinlandFRA 250 FranceGUF 254 French GuianaPYF 258 French PolynesiaATF 260 French Southern Territories (the)GAB 266 GabonGMB 270 Gambia (the)GEO 268 GeorgiaDEU 276 GermanyGHA 288 GhanaGIB 292 GibraltarGRC 300 GreeceGRL 304 GreenlandGRD 308 GrenadaGLP 312 GuadeloupeGUM 316 GuamGTM 320 GuatemalaGGY 831 GuernseyGIN 324 GuineaGNB 624 Guinea-BissauGUY 328 GuyanaHTI 332 HaitiHMD 334 Heard Island and McDonald IslandsVAT 336 Holy See (the)HND 340 HondurasHKG 344 Hong KongHUN 348 HungaryISL 352 IcelandIND 356 IndiaIDN 360 IndonesiaIRN 364 Iran (Islamic Republic of)IRQ 368 IraqIRL 372 IrelandIMN 833 Isle of ManISR 376 IsraelITA 380 ItalyJAM 388 JamaicaJPN 392 JapanJEY 832 JerseyJOR 400 JordanKAZ 398 KazakhstanKEN 404 KenyaKIR 296 KiribatiPRK 408 Korea (the Democratic People's Republic of)KOR 410 Korea (the Republic of)KWT 414 KuwaitKGZ 417 KyrgyzstanLAO 418 Lao People's Democratic Republic (the)LVA 428 LatviaLBN 422 LebanonLSO 426 LesothoLBR 430 LiberiaLBY 434 LibyaLIE 438 LiechtensteinLTU 440 LithuaniaLUX 442 LuxembourgMAC 446 MacaoMDG 450 MadagascarMWI 454 MalawiMYS 458 MalaysiaMDV 462 MaldivesMLI 466 MaliMLT 470 MaltaMHL 584 Marshall Islands (the)MTQ 474 MartiniqueMRT 478 MauritaniaMUS 480 MauritiusMYT 175 MayotteMEX 484 MexicoFSM 583 Micronesia (Federated States of)MDA 498 Moldova (the Republic of)MCO 492 MonacoMNG 496 MongoliaMNE 499 MontenegroMSR 500 MontserratMAR 504 MoroccoMOZ 508 MozambiqueMMR 104 MyanmarNAM 516 NamibiaNRU 520 NauruNPL 524 NepalNLD 528 Netherlands (the)NCL 540 New CaledoniaNZL 554 New ZealandNIC 558 NicaraguaNER 562 Niger (the)NGA 566 NigeriaNIU 570 NiueNFK 574 Norfolk IslandMNP 580 Northern Mariana Islands (the)NOR 578 NorwayOMN 512 OmanPAK 586 PakistanPLW 585 PalauPSE 275 Palestine, State ofPAN 591 PanamaPNG 598 Papua New GuineaPRY 600 ParaguayPER 604 PeruPHL 608 Philippines (the)PCN 612 PitcairnPOL 616 PolandPRT 620 PortugalPRI 630 Puerto RicoQAT 634 QatarMKD 807 Republic of North MacedoniaROU 642 RomaniaRUS 643 Russian Federation (the)RWA 646 RwandaREU 638 RéunionBLM 652 Saint BarthélemySHN 654 Saint Helena, Ascension and Tristan da CunhaKNA 659 Saint Kitts and NevisLCA 662 Saint LuciaMAF 663 Saint Martin (French part)SPM 666 Saint Pierre and MiquelonVCT 670 Saint Vincent and the GrenadinesWSM 882 SamoaSMR 674 San MarinoSTP 678 Sao Tome and PrincipeSAU 682 Saudi ArabiaSEN 686 SenegalSRB 688 SerbiaSYC 690 SeychellesSLE 694 Sierra LeoneSGP 702 SingaporeSXM 534 Sint Maarten (Dutch part)SVK 703 SlovakiaSVN 705 SloveniaSLB 090 Solomon IslandsSOM 706 SomaliaZAF 710 South AfricaSGS 239 South Georgia and the South Sandwich IslandsSSD 728 South SudanESP 724 SpainLKA 144 Sri LankaSDN 729 Sudan (the)SUR 740 SurinameSJM 744 Svalbard and Jan MayenSWE 752 SwedenCHE 756 SwitzerlandSYR 760 Syrian Arab RepublicTWN 158 Taiwan (Province of China)TJK 762 TajikistanTZA 834 Tanzania, United Republic ofTHA 764 ThailandTLS 626 Timor-LesteTGO 768 TogoTKL 772 TokelauTON 776 TongaTTO 780 Trinidad and TobagoTUN 788 TunisiaTUR 792 TurkeyTKM 795 TurkmenistanTCA 796 Turks and Caicos Islands (the)TUV 798 TuvaluUGA 800 UgandaUKR 804 UkraineARE 784 United Arab Emirates (the)GBR 826 United Kingdom of Great Britain and Northern Ireland (the)UMI 581 United States Minor Outlying Islands (the)USA 840 United States of America (the)URY 858 UruguayUZB 860 UzbekistanVUT 548 VanuatuVEN 862 Venezuela (Bolivarian Republic of)VNM 704 Viet NamVGB 092 Virgin Islands (British)VIR 850 Virgin Islands (U.S.)WLF 876 Wallis and FutunaESH 732 Western SaharaYEM 887 YemenZMB 894 ZambiaZWE 716 ZimbabweALA 248 Åland Islands"

var _Code_index = [...]uint16{0, 19, 34, 49, 71, 86, 100, 116, 134, 161, 178, 193, 206, 223, 238, 256, 277, 292, 310, 326, 341, 356, 370, 383, 398, 412, 452, 492, 522, 538, 559, 573, 617, 642, 658, 678, 693, 711, 727, 743, 757, 785, 823, 835, 848, 861, 885, 922, 938, 959, 1005, 1024, 1050, 1068, 1083, 1095, 1111, 1125, 1140, 1162, 1177, 1193, 1209, 1241, 1256, 1269, 1288, 1313, 1328, 1343, 1359, 1375, 1416, 1443, 1455, 1470, 1484, 1505, 1529, 1570, 1583, 1603, 1618, 1633, 1646, 1663, 1677, 1694, 1709, 1727, 1739, 1756, 1772, 1786, 1807, 1821, 1834, 1875, 1897, 1913, 1930, 1945, 1960, 1973, 1990, 2024, 2036, 2051, 2070, 2084, 2097, 2112, 2125, 2139, 2153, 2171, 2184, 2200, 2251, 2282, 2296, 2314, 2360, 2374, 2389, 2404, 2419, 2432, 2453, 2470, 2488, 2501, 2519, 2533, 2549, 2565, 2577, 2590, 2620, 2638, 2656, 2673, 2688, 2702, 2742, 2775, 2789, 2805, 2823, 2841, 2856, 2874, 2889, 2904, 2917, 2930, 2955, 2976, 2995, 3012, 3031, 3046, 3058, 3080, 3118, 3132, 3144, 3160, 3173, 3200, 3214, 3238, 3254, 3266, 3291, 3307, 3321, 3337, 3356, 3369, 3404, 3419, 3451, 3465, 3481, 3506, 3558, 3587, 3606, 3640, 3673, 3713, 3726, 3744, 3773, 3793, 3808, 3822, 3840, 3860, 3877, 3910, 3926, 3942, 3965, 3980, 4000, 4052, 4071, 4084, 4101, 4120, 4136, 4166, 4180, 4199, 4227, 4261, 4279, 4315, 4331, 4350, 4362, 4377, 4390, 4417, 4432, 4446, 4466, 4504, 4518, 4532, 4547, 4581, 4647, 4697, 4735, 4750, 4768, 4783, 4825, 4841, 4873, 4902, 4927, 4949, 4962, 4976, 4992, 5014}

func (i Code) String() string {
	if i < 0 || i >= Code(len(_Code_index)-1) {
		return "Code(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Code_name[_Code_index[i]:_Code_index[i+1]]
}
